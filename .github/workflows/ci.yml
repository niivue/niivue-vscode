name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: ['*']

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.packages }}
      pwa: ${{ steps.filter.outputs.pwa }}
      jupyter: ${{ steps.filter.outputs.jupyter }}
      vscode: ${{ steps.filter.outputs.vscode }}
      streamlit: ${{ steps.filter.outputs.streamlit }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            packages:
              - 'packages/**'
            pwa:
              - 'apps/pwa/**'
              - 'packages/**'
            jupyter:
              - 'apps/jupyter/**'
              - 'packages/**'
            vscode:
              - 'apps/vscode/**'
              - 'packages/**'
            streamlit:
              - 'apps/streamlit/**'
              - 'packages/**'

  lint-and-typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm turbo lint

      - name: Type check
        run: pnpm turbo type-check

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm turbo build

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            apps/*/dist
            apps/*/build
            apps/*/lib
            packages/*/dist
          key: build-artifacts-${{ github.sha }}

  test-pwa:
    needs: [changes, build]
    if: needs.changes.outputs.pwa == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: |
            apps/*/dist
            apps/*/build
            apps/*/lib
            packages/*/dist
          key: build-artifacts-${{ github.sha }}

      - name: Test PWA
        run: pnpm turbo test --filter=@niivue/pwa

  test-jupyter:
    needs: [changes, build]
    if: needs.changes.outputs.jupyter == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: |
            apps/*/dist
            apps/*/build
            apps/*/lib
            packages/*/dist
          key: build-artifacts-${{ github.sha }}

      - name: Install Python dependencies
        run: python -m pip install -U "jupyterlab>=4.0.0,<5"

      - name: Test Jupyter extension
        run: |
          cd apps/jupyter
          python -m pip install .[test]
          jupyter labextension list
          python -m jupyterlab.browser_check

  e2e-tests:
    needs: [changes, build]
    if: needs.changes.outputs.pwa == 'true'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: |
            apps/*/dist
            apps/*/build
            apps/*/lib
            packages/*/dist
          key: build-artifacts-${{ github.sha }}

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
        working-directory: ./apps/pwa

      - name: Run Playwright tests
        run: pnpm test:e2e
        working-directory: ./apps/pwa

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/pwa/playwright-report/
          retention-days: 30
